//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.08.15 at 02:07:00 PM CDT 
//


package com.dell.esg.icee.common.protocol.command.racadm.entity.chassis;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the com.dell.esg.icee.common.protocol.command.racadm.entity.chassis package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: com.dell.esg.icee.common.protocol.command.racadm.entity.chassis
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link M1000ESensorInfoWithC }
     * 
     */
    public M1000ESensorInfoWithC createM1000ESensorInfoWithC() {
        return new M1000ESensorInfoWithC();
    }

    /**
     * Create an instance of {@link M1000ESensorInfoBase }
     * 
     */
    public M1000ESensorInfoBase createM1000ESensorInfoBase() {
        return new M1000ESensorInfoBase();
    }

    /**
     * Create an instance of {@link M1000ESensorInfo }
     * 
     */
    public M1000ESensorInfo createM1000ESensorInfo() {
        return new M1000ESensorInfo();
    }

    /**
     * Create an instance of {@link VrtxSensorInfo }
     * 
     */
    public VrtxSensorInfo createVrtxSensorInfo() {
        return new VrtxSensorInfo();
    }

    /**
     * Create an instance of {@link VrtxSensorInfoBase }
     * 
     */
    public VrtxSensorInfoBase createVrtxSensorInfoBase() {
        return new VrtxSensorInfoBase();
    }

    /**
     * Create an instance of {@link VrtxSensorInfoWithC }
     * 
     */
    public VrtxSensorInfoWithC createVrtxSensorInfoWithC() {
        return new VrtxSensorInfoWithC();
    }

    /**
     * Create an instance of {@link DiskEnclosure }
     * 
     */
    public DiskEnclosure createDiskEnclosure() {
        return new DiskEnclosure();
    }

    /**
     * Create an instance of {@link PhysicalDisk }
     * 
     */
    public PhysicalDisk createPhysicalDisk() {
        return new PhysicalDisk();
    }

    /**
     * Create an instance of {@link KvmInfo }
     * 
     */
    public KvmInfo createKvmInfo() {
        return new KvmInfo();
    }

    /**
     * Create an instance of {@link EquallogicArrayConfig }
     * 
     */
    public EquallogicArrayConfig createEquallogicArrayConfig() {
        return new EquallogicArrayConfig();
    }

    /**
     * Create an instance of {@link CfgTraps }
     * 
     */
    public CfgTraps createCfgTraps() {
        return new CfgTraps();
    }

    /**
     * Create an instance of {@link ChassisLog }
     * 
     */
    public ChassisLog createChassisLog() {
        return new ChassisLog();
    }

    /**
     * Create an instance of {@link ChassisNicCfg }
     * 
     */
    public ChassisNicCfg createChassisNicCfg() {
        return new ChassisNicCfg();
    }

    /**
     * Create an instance of {@link CmcVersion }
     * 
     */
    public CmcVersion createCmcVersion() {
        return new CmcVersion();
    }

    /**
     * Create an instance of {@link VirtualDisk }
     * 
     */
    public VirtualDisk createVirtualDisk() {
        return new VirtualDisk();
    }

    /**
     * Create an instance of {@link CMCIPv4Info }
     * 
     */
    public CMCIPv4Info createCMCIPv4Info() {
        return new CMCIPv4Info();
    }

    /**
     * Create an instance of {@link StorageControllerVersion }
     * 
     */
    public StorageControllerVersion createStorageControllerVersion() {
        return new StorageControllerVersion();
    }

    /**
     * Create an instance of {@link LicenseViewDetails }
     * 
     */
    public LicenseViewDetails createLicenseViewDetails() {
        return new LicenseViewDetails();
    }

    /**
     * Create an instance of {@link ChassisInfo }
     * 
     */
    public ChassisInfo createChassisInfo() {
        return new ChassisInfo();
    }

    /**
     * Create an instance of {@link CfgKvmInfo }
     * 
     */
    public CfgKvmInfo createCfgKvmInfo() {
        return new CfgKvmInfo();
    }

    /**
     * Create an instance of {@link PcieSlot }
     * 
     */
    public PcieSlot createPcieSlot() {
        return new PcieSlot();
    }

    /**
     * Create an instance of {@link IoInfo }
     * 
     */
    public IoInfo createIoInfo() {
        return new IoInfo();
    }

    /**
     * Create an instance of {@link PcieSlotFQDD }
     * 
     */
    public PcieSlotFQDD createPcieSlotFQDD() {
        return new PcieSlotFQDD();
    }

    /**
     * Create an instance of {@link IoInfoStack }
     * 
     */
    public IoInfoStack createIoInfoStack() {
        return new IoInfoStack();
    }

    /**
     * Create an instance of {@link ChassisActiveError }
     * 
     */
    public ChassisActiveError createChassisActiveError() {
        return new ChassisActiveError();
    }

    /**
     * Create an instance of {@link VrtxIntrusionSensorInfo }
     * 
     */
    public VrtxIntrusionSensorInfo createVrtxIntrusionSensorInfo() {
        return new VrtxIntrusionSensorInfo();
    }

    /**
     * Create an instance of {@link PcieSlotAssignment }
     * 
     */
    public PcieSlotAssignment createPcieSlotAssignment() {
        return new PcieSlotAssignment();
    }

    /**
     * Create an instance of {@link FanOffset }
     * 
     */
    public FanOffset createFanOffset() {
        return new FanOffset();
    }

    /**
     * Create an instance of {@link SwitchVersion }
     * 
     */
    public SwitchVersion createSwitchVersion() {
        return new SwitchVersion();
    }

    /**
     * Create an instance of {@link RaidController }
     * 
     */
    public RaidController createRaidController() {
        return new RaidController();
    }

    /**
     * Create an instance of {@link MacAddress }
     * 
     */
    public MacAddress createMacAddress() {
        return new MacAddress();
    }

    /**
     * Create an instance of {@link MainBoardVersionSummary }
     * 
     */
    public MainBoardVersionSummary createMainBoardVersionSummary() {
        return new MainBoardVersionSummary();
    }

    /**
     * Create an instance of {@link ServerModulePowerAllocation }
     * 
     */
    public ServerModulePowerAllocation createServerModulePowerAllocation() {
        return new ServerModulePowerAllocation();
    }

    /**
     * Create an instance of {@link VrtxPowerSensorInfo }
     * 
     */
    public VrtxPowerSensorInfo createVrtxPowerSensorInfo() {
        return new VrtxPowerSensorInfo();
    }

    /**
     * Create an instance of {@link M1000EPowerSensorInfo }
     * 
     */
    public M1000EPowerSensorInfo createM1000EPowerSensorInfo() {
        return new M1000EPowerSensorInfo();
    }

    /**
     * Create an instance of {@link ChassisPowerSupplyStatus }
     * 
     */
    public ChassisPowerSupplyStatus createChassisPowerSupplyStatus() {
        return new ChassisPowerSupplyStatus();
    }

    /**
     * Create an instance of {@link ModInfo }
     * 
     */
    public ModInfo createModInfo() {
        return new ModInfo();
    }

    /**
     * Create an instance of {@link EnhancedCoolingMode }
     * 
     */
    public EnhancedCoolingMode createEnhancedCoolingMode() {
        return new EnhancedCoolingMode();
    }

    /**
     * Create an instance of {@link CMCInfo }
     * 
     */
    public CMCInfo createCMCInfo() {
        return new CMCInfo();
    }

    /**
     * Create an instance of {@link PhysicalDiskVersion }
     * 
     */
    public PhysicalDiskVersion createPhysicalDiskVersion() {
        return new PhysicalDiskVersion();
    }

    /**
     * Create an instance of {@link CMCVersionSummary }
     * 
     */
    public CMCVersionSummary createCMCVersionSummary() {
        return new CMCVersionSummary();
    }

    /**
     * Create an instance of {@link ServerVersionSummary }
     * 
     */
    public ServerVersionSummary createServerVersionSummary() {
        return new ServerVersionSummary();
    }

    /**
     * Create an instance of {@link SwitchVersionSummary }
     * 
     */
    public SwitchVersionSummary createSwitchVersionSummary() {
        return new SwitchVersionSummary();
    }

    /**
     * Create an instance of {@link StompSensorInfo }
     * 
     */
    public StompSensorInfo createStompSensorInfo() {
        return new StompSensorInfo();
    }

    /**
     * Create an instance of {@link StorageEnclosureVersion }
     * 
     */
    public StorageEnclosureVersion createStorageEnclosureVersion() {
        return new StorageEnclosureVersion();
    }

    /**
     * Create an instance of {@link CMCNetworkInfo }
     * 
     */
    public CMCNetworkInfo createCMCNetworkInfo() {
        return new CMCNetworkInfo();
    }

    /**
     * Create an instance of {@link ChassisInfrastructureVersion }
     * 
     */
    public ChassisInfrastructureVersion createChassisInfrastructureVersion() {
        return new ChassisInfrastructureVersion();
    }

    /**
     * Create an instance of {@link ServerNicCfg }
     * 
     */
    public ServerNicCfg createServerNicCfg() {
        return new ServerNicCfg();
    }

    /**
     * Create an instance of {@link PowerBudgetStatus }
     * 
     */
    public PowerBudgetStatus createPowerBudgetStatus() {
        return new PowerBudgetStatus();
    }

    /**
     * Create an instance of {@link StompPowerSensorInfo }
     * 
     */
    public StompPowerSensorInfo createStompPowerSensorInfo() {
        return new StompPowerSensorInfo();
    }

    /**
     * Create an instance of {@link SwitchNicCfg }
     * 
     */
    public SwitchNicCfg createSwitchNicCfg() {
        return new SwitchNicCfg();
    }

    /**
     * Create an instance of {@link LicenseViewInfo }
     * 
     */
    public LicenseViewInfo createLicenseViewInfo() {
        return new LicenseViewInfo();
    }

    /**
     * Create an instance of {@link CMCIPv6Info }
     * 
     */
    public CMCIPv6Info createCMCIPv6Info() {
        return new CMCIPv6Info();
    }

}
